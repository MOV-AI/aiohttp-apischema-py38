[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "aiohttp-apischema"
version = "0.0.2.2"
dependencies = ["aiohttp>=3.8", "pydantic>=2", 'typing-extensions ; python_version < "3.13"']
description = "Generate a schema and validate user input from types"
license = {file = "LICENSE"}
readme = "README.rst"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Internet :: WWW/HTTP",
    "Framework :: AsyncIO",
    "Framework :: aiohttp",
    "Development Status :: 2 - Pre-Alpha"
]

[project.urls]
Homepage = "https://github.com/aio-libs/aiohttp-apischema"
Issues = "https://github.com/aio-libs/aiohttp-apischema/issues"

[tool.setuptools]
packages = ["aiohttp_apischema"]

[tool.black]
line-length = 100

[tool.bumpversion]
current_version = "0.0.2.2"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)?(\\.(?P<build>\\d+))?"
serialize = ["{major}.{minor}.{patch}.{build}"]

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'
regex = true

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = '# vTBD'
serialize = ["{major}.{minor}.{patch}"]
replace = "# v{new_version}"
regex = true
ignore_missing_version = true

[[tool.bumpversion.files]]
filename = "aiohttp_apischema/__init__.py"
search = '__version__ = .*'
replace = '__version__ = "{new_version}"'
regex = true
